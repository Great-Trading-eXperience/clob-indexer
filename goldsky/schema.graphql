type Pool @entity {
  id: ID!
  coin: String
  orderBook: Bytes
  baseCurrency: Bytes!
  quoteCurrency: Bytes!
  timestamp: BigInt
}

type Order @entity {
  id: ID!
  pool: String!
  orderId: BigInt!
  user: Bytes
  side: String
  timestamp: BigInt
  price: BigInt
  quantity: BigInt
  orderValue: BigInt
  filled: BigInt
  type: String
  status: String
  expiry: BigInt
}

type OrderHistory @entity {
  id: ID!
  pool: String!
  order: Order!
  orderId: String
  timestamp: BigInt
  quantity: BigInt
  filled: BigInt
  status: String
}

type Trade @entity {
  id: ID!
  transactionId: String
  pool: String!
  order: Order
  price: BigInt
  quantity: BigInt
  timestamp: BigInt
}

type OrderBookTrade @entity {
  id: ID!
  price: BigInt
  quantity: BigInt
  timestamp: BigInt
  transactionId: String
  side: String
  pool: String!
}

type MinuteBucket @entity {
  id: ID!
  open: BigDecimal!
  close: BigDecimal!
  low: BigDecimal!
  high: BigDecimal!
  average: BigDecimal!
  count: Int!
  pool: String!
  timestamp: BigInt!
}

type FiveMinuteBucket @entity {
  id: ID!
  open: BigDecimal!
  close: BigDecimal!
  low: BigDecimal!
  high: BigDecimal!
  average: BigDecimal!
  count: Int!
  pool: String!
  timestamp: BigInt!
}

type ThirtyMinuteBucket @entity {
  id: ID!
  open: BigDecimal!
  close: BigDecimal!
  low: BigDecimal!
  high: BigDecimal!
  average: BigDecimal!
  count: Int!
  pool: String!
  timestamp: BigInt!
}

type HourBucket @entity {
  id: ID!
  open: BigDecimal!
  close: BigDecimal!
  low: BigDecimal!
  high: BigDecimal!
  average: BigDecimal!
  count: Int!
  pool: String!
  timestamp: BigInt!
}

type DailyBucket @entity {
  id: ID!
  open: BigDecimal!
  close: BigDecimal!
  low: BigDecimal!
  high: BigDecimal!
  average: BigDecimal!
  count: Int!
  pool: String!
  timestamp: BigInt!
}

type Balance @entity {
  id: ID!
  user: Bytes!
  name: String
  symbol: String
  currency: Bytes!
  amount: BigInt!
  lockedAmount: BigInt!
}